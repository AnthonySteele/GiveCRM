@using System.Linq.Expressions
@using System.Web.Mvc
@using System.Web.Mvc.Html

@* see http://weblogs.asp.net/scottgu/archive/2011/05/12/asp-net-mvc-3-and-the-helper-syntax-within-razor.aspx *@

@functions
{
    public static HelperResult LabeledValue<TModel>(HtmlHelper<TModel> htmlHelper, string label, string value)
    {
        return ReadOnlyFieldFormat(label, value);
    }

    public static HelperResult Field<TModel, TProperty>(HtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TProperty>> expr)
    {
        return FieldFormat(htmlHelper.LabelFor(expr), htmlHelper.EditorFor(expr), null);
    }


    public static HelperResult FieldWithValidation<TModel, TProperty>(HtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TProperty>> expr)
    {
        return FieldFormat(htmlHelper.LabelFor(expr), htmlHelper.EditorFor(expr), htmlHelper.ValidationMessageFor(expr));
    }

    public static HelperResult DropdownFor<TModel, TProperty>(
        HtmlHelper<TModel> htmlHelper,
        Expression<Func<TModel, TProperty>> expr,
        IEnumerable<System.Web.Mvc.SelectListItem> items)
    {
        return FieldFormat(htmlHelper.LabelFor(expr), htmlHelper.DropDownListFor(expr, items), null);
    }

    public static HelperResult TextAreaFor<TModel, TProperty>(HtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TProperty>> expr)
    {
        return FieldFormat(htmlHelper.LabelFor(expr), htmlHelper.TextAreaFor(expr), null);
    }

    public static HelperResult TextAreaFor<TModel, TProperty>(HtmlHelper<TModel> htmlHelper, Expression<Func<TModel, TProperty>> expr,
        int rows, int columns, object htmlAttributes)
    {
        return FieldFormat(htmlHelper.LabelFor(expr), htmlHelper.TextAreaFor(expr, rows, columns, htmlAttributes), null);
    }
}

@helper FieldFormat(MvcHtmlString labelData, MvcHtmlString fieldData, MvcHtmlString validationMessage)
{
    <div class="editor-label">@labelData</div>
    <div class="editor-field">@fieldData</div>
    if (validationMessage != null)
    {
            @validationMessage
    }
}

@helper ReadOnlyFieldFormat(string labelData, string fieldData)
{
    <div>
        <span class="text-label">@(labelData + ":")</span>
        <span>@fieldData</span>
    </div>
}